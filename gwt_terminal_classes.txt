@startuml

header
Terminal Classes (GWT)
endheader

interface WorkbenchView {
   + bringToFront()
   + maximize()
   + ensureHeight(height)
   + setProgress(showProgress)
   + onBeforeUnselected()
   + onBeforeSelected()
   + void onSelected()
}

class DelayLoadWorkbenchTab<T>

class TerminalTab <TerminalTabPresenter> {
   + closeable() : boolean
   + confirmClose(Command)
}
DelayLoadWorkbenchTab <|-- TerminalTab

abstract class BasePresenter {
   + getView() : WorkbenchView
   + asWidget() : Widget
   + onBeforeUnselected()
   + onBeforeSelected()
   + onSelected()
   - view : WorkbenchView
}

class TerminalTabPresenter <<BasePresenter>> {
   + confirmClose(Command)
   + onRepopulateTerminals(ArrayList<ConsoleProcessInfo>)
   .. Event Handlers ..
   + onActivateNamedTerminal(ActivateNamedTerminalEvent)
   + onAddToTerminal(AddToTerminalEvent)
   + onClearTerminal(ClearTerminalEvent)
   + onCreateTerminal(CreateTerminalEvent)
   + onRemoveTerminal(RemoveTerminalEvent)
   + onSendToTerminal(SendToTerminalEvent)
   .. Command Handlers ..
   + onActivateTerminal()
   + onClearTerminalScrollbackBuffer()
   + onCloseTerminal()
   + onInterruptTerminal()
   + onNextTerminal()
   + onPreviousTerminal()
   + onRenameTerminal() 
   + onSendTerminalToEditor()
   + onShowTerminalInfo()
}

BasePresenter <|-- TerminalTabPresenter

interface DisplaySelectedCallback {
    + displaySelected()
}

interface TerminalTabPresenter.Display {
   + activateTerminal(DisplaySelectedCallback)
   + createTerminal(postCreateText)
   + terminateCurrentTerminal()
   + repopulateTerminals(ArrayList<ConsoleProcessInfo>)
   + activeTerminals() : boolean
   + terminateAllTerminals()
   + renameTerminal()
   + clearTerminalScrollbackBuffer(caption)
   + previousTerminal()
   + nextTerminal()
   + showTerminalInfo()
   + sendToTerminal(text, setFocus)
   + interruptTerminal()
   + addTerminal(ConsoleProcessInfo, hasSession)
   + removeTerminal(handle)
   + activateNamedTerminal(caption, createdByApi)
   + sendTerminalToEditor()
   + ensureTerminal()
}

class XTermNative <<JavaScriptObject>>
class Widget
class XTermWidget
class TerminalSession
class TerminalHelper

class TerminalTab.Shim <<generated>> {
   ~ onRepopulateTerminals(ArrayList<ConsoleProcessInfo>)
   ~ confirmClose(Command)
   .. Event Handlers ..
   + onActivateNamedTerminal(ActivateNamedTerminalEvent)
   + onAddTerminal(AddTerminalEvent)
   + onClearTerminal(ClearTerminalEvent)
   + onCreateTerminal(CreateTerminalEvent)
   + onRemoveTerminal(RemoveTerminalEvent)
   + onSendToTerminal(SendToTerminalEvent)
   .. Command Handlers ..
   + onActivateTerminal()
   + onClearTerminalScrollbackBuffer()
   + onCloseTerminal()
   + onInterruptTerminal()
   + onNextTerminal()
   + onPreviousTerminal()
   + onRenameTerminal()
   + onSendTerminalToEditor()
   + onShowTerminalInfo()
}

XTermWidget <|-- TerminalSession
Widget <|-- XTermWidget
XTermWidget *-- "1" XTermNative
WorkbenchView <|-- TerminalTabPresenter.Display
TerminalTab *-- TerminalTab.Shim
TerminalTab.Shim *-- TerminalTabPresenter

@enduml

