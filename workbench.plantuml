@startuml

title __WORKBENCH Class Diagram__\n

abstract class MessageDisplay {
   # createDialog() {abstract}
   + promptForInteger() {abstract}
   + promptForText() {abstract}
   + promptForTextWithOption() {abstract}
   + public void promptForPassword()
   + showErrorMessage()
   + showGenericDialog()
   + showMessage()
   + showNotYetImplemented()
   + showPopupBlockedMessage()
   + showYesNoMessage()
}
hide MessageDisplay methods
hide MessageDisplay fields

abstract class GlobalDisplay {
   + openWindow() {abstract}
   + openWindow() {abstract}
   + openProgressWindow() {abstract}
   + openMinimalWindow() {abstract}
   + openWebMinimalWindow() {abstract}
   + openSatelliteWindow() {abstract}
   + openEmailComposeWindow() {abstract}
   + showHtmlFile() {abstract}
   + showWordDoc() {abstract}
   + showPptPresentation() {abstract}
   + openRStudioLink()
   + void openRStudioLink() {abstract}
   + showProgress() {abstract}
   + showLicenseWarningBar() {abstract}
   + showWarningBar() {abstract}
   + hideWarningBar() {abstract}
   + getProgressIndicator() {abstract}
}
hide GlobalDisplay methods
hide GlobalDisplay fields
MessageDisplay <|-- GlobalDisplay

class DefaultGlobalDisplay <<Singleton>> {
}
hide DefaultGlobalDisplay methods
hide DefaultGlobalDisplay fields
GlobalDisplay <|-- DefaultGlobalDisplay
DefaultGlobalDisplay --> ApplicationView

class SatelliteManager <<Singleton>> {
}
hide SatelliteManager methods
hide SatelliteManager fields

class RStudio <<Entrypoint>> {
}
hide RStudio methods
hide RStudio fields

class Application <<Singleton>> {
   - rootPanel_ : RootLayoutPanel
   + go()
}
hide Application methods
hide Application fields
RStudio --> Application

interface ApplicationView {
   focusToolbar()
   getWidget()
   hideSerializationProgress()
   hideWarning()
   isToolbarShowing()
   reportStatus()
   showApplicationAgreement()
   showApplicationDisconnected()
   showApplicationMultiSessionQuit()
   showApplicationOffline()
   showApplicationQuit()
   showApplicationSuicide()
   showApplicationUpdateRequired()
   showLicenseWarning()
   showSerializationProgress()
   showSessionAbendWarning()
   showToolbar()
   showWarning()
   showWorkbenchView()
}
hide ApplicationView methods
hide ApplicationView fields

class ApplicationWindow <<Singleton, Composite:LayoutPanel>> {
}
hide ApplicationWindow methods
hide ApplicationWindow fields
Application *-- ApplicationView
Application --> SatelliteManager
ApplicationView <|.. ApplicationWindow

interface WorkbenchMainView <<Widget>> {
}
hide WorkbenchMainView fields
hide WorkbenchMainView methods

class WorkbenchScreen <<Composite:MainSplitPanel>> {
}
hide WorkbenchScreen methods
hide WorkbenchScreen fields
WorkbenchMainView <|.. WorkbenchScreen

class Workbench {
}
hide Workbench fields
hide Workbench methods

class WorkbenchContext <<Singleton>> {
}
hide WorkbenchContext fields
hide WorkbenchContext methods
Workbench --> WorkbenchMainView
Workbench --> WorkbenchContext
ApplicationWindow *-- WorkbenchMainView

interface ApplicationHeader <<IsWidget>> {
}
hide ApplicationHeader fields
hide ApplicationHeader methods

class WebApplicationHeader <<Composite: FlowPanel>> {
}
hide WebApplicationHeader fields
hide WebApplicationHeader methods
ApplicationHeader <|-- WebApplicationHeader
ApplicationWindow *-- ApplicationHeader

class AppMenuBar {
}
hide AppMenuBar methods
hide AppMenuBar fields
WebApplicationHeader *-- AppMenuBar

class GlobalToolbar {
}
hide GlobalToolbar methods
hide GlobalToolbar fields
WebApplicationHeader *-- GlobalToolbar

class MainSplitPanel {
}
hide MainSplitPanel methods
hide MainSplitPanel fields
WorkbenchScreen --> MainSplitPanel

class LogicalWindow {
}
hide LogicalWindow methods
hide LogicalWindow fields

class WindowFrame {
}
hide WindowFrame methods
hide WindowFrame fields
class MinimizedWindowFrame {
}
hide MinimizedWindowFrame methods
hide MinimizedWindowFrame fields
LogicalWindow *-- WindowFrame
LogicalWindow *-- MinimizedWindowFrame

class TabLayoutPanel {
}
hide TabLayoutPanel methods
hide TabLayoutPanel fields

class ModuleTabLayoutPanel {
}
hide ModuleTabLayoutPanel methods
hide ModuleTabLayoutPanel fields
TabLayoutPanel <|-- ModuleTabLayoutPanel

interface WorkbenchTab {
}
hide WorkbenchTab methods
hide WorkbenchTab fields

abstract class DelayLoadWorkbenchTab<T> {
}
hide DelayLoadWorkbenchTab methods
hide DelayLoadWorkbenchTab fields
WorkbenchTab <|.. DelayLoadWorkbenchTab

class EnvironmentTab<EnvironmentPresenter> {
}
hide EnvironmentTab methods
hide EnvironmentTab fields
DelayLoadWorkbenchTab <|-- EnvironmentTab

class ViewerTab<ViewerPresenter> {
}
hide ViewerTab methods
hide ViewerTab fields
DelayLoadWorkbenchTab <|-- ViewerTab


class WorkbenchTabPanel <<Composite: LayoutPanel>> {
}
hide WorkbenchTabPanel methods
hide WorkbenchTabPanel fields
WorkbenchTabPanel *-- ModuleTabLayoutPanel
WorkbenchTabPanel *-- "many" WorkbenchTab

class ConsoleTabPanel {
}
hide ConsoleTabPanel methods
hide ConsoleTabPanel fields
WorkbenchTabPanel <|-- ConsoleTabPanel

class ArrayList<Tab> {
}
hide ArrayList methods
hide ArrayList fields

class PaneManager {
   - createConsole() : LogicalWindow
   - createSource() : LogicalWindow
   - createTabSet() : LogicalWindow
}
hide PaneManager fields
WorkbenchScreen *-- PaneManager
PaneManager *-- MainSplitPanel
PaneManager *-- "4" LogicalWindow
PaneManager *-- ConsoleTabPanel
PaneManager *-- "TabSet1, TabSet2" ArrayList
PaneManager *-- WorkbenchTabPanel

class DualWindowLayoutPanel {
}
hide DualWindowLayoutPanel methods
hide DualWindowLayoutPanel fields
DualWindowLayoutPanel *-- "2 (top/bottom)" LogicalWindow

MainSplitPanel *-- "2 (left/right)" DualWindowLayoutPanel

class PrimaryWindowFrame {
}
hide PrimaryWindowFrame methods
hide PrimaryWindowFrame fields
WindowFrame <|-- PrimaryWindowFrame

class MinimizedModuleTabLayoutPanel {
}
hide MinimizedModuleTabLayoutPanel methods
hide MinimizedModuleTabLayoutPanel fields
MinimizedWindowFrame <|-- MinimizedModuleTabLayoutPanel

class SourceShim {
}
hide SourceShim methods
hide SourceShim fields

class SourceWindow {
}
hide SourceWindow methods
hide SourceWindow fields

class Source {
}
hide Source methods
hide Source fields

class SourceWindowManager <<Singleton>> {
}
hide SourceWindowManager methods
hide SourceWindowManager fields

@enduml
