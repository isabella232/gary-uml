@startuml

abstract class ModalDialogBase extends DialogBox
class MessageDialog extends ModalDialogBase

interface DialogBuilder {
    + addButton(): DialogBuilder
    + setDefaultButton(): DialogBuilder
    + showModal()
}

abstract class DialogBuilderBase implements DialogBuilder {
    + /addButton(): DialogBuilder
    + /setDefaultButton(): DialogBuilder
    + showModal()
    # type: int
    # caption: String
    # buttons: ArrayList<ButtonSpec>
    # defaultButton : int
}

interface DialogBuilderFactory {
    + create(): DialogBuilder
}

namespace Web {
    class WebDialogBuilderFactory implements .DialogBuilderFactory {
        +/create(): DialogBuilder
    }
    WebDialogBuilderFactory +-- Builder

    class Builder extends .DialogBuilderBase {
        # /showModal()
        - createDialog(): MessageDialog
    }

    Builder ..> .MessageDialog
}

namespace Desktop {
    interface DesktopFrame {
        + showMessageBox()
    }

    class DesktopDialogBuilderFactory implements .DialogBuilderFactory {
        +/create(): DialogBuilder
    }
    DesktopDialogBuilderFactory +-- Builder

    class Builder extends .DialogBuilderBase {
        # /showModal()
        - createDialog(): MessageDialog
    }
    Builder ..> DesktopFrame

    class GwtCallback implements DesktopFrame
    note bottom of GwtCallback : Implemented in native\nC++ code.
}

abstract class MessageDisplay {
    +promptForText()
    +showYesNoMessage()
    +promptForPassword()
    +showMessage()
    +etc()
    #createDialog() : DialogBuilder
}

abstract class GlobalDisplay extends MessageDisplay

class DefaultGlobalDisplay extends GlobalDisplay {
   #/createDialog() : DialogBuilder
}
DefaultGlobalDisplay ..> DialogBuilderFactory : via GWT create

@enduml
